install.packages("usethis")
use_directory("reports/css")
library(usethis)
use_directory("R")
use_directory("R/preparation")
use_directory("R/processing")
use_directory("R/modeling")
use_directory("test")
use_directory("data/raw")
use_directory("data/processed")
use_directory("reports/img")
use_directory("reports/css")
use_directory("R/preparation")
use_directory("R/processing")
use_directory("R/modeling")
use_directory("test")
use_directory("data/raw")
use_directory("data/processed")
use_directory("reports/img")
use_directory("reports/css")
use_directory("R")
use_directory("R/preparation")
use_directory("R/processing")
use_directory("R/modeling")
use_directory("test")
use_directory("data/raw")
use_directory("data/processed")
use_directory("reports/img")
use_directory("reports/css")
library(kknn)
install.packages("kknn")
read_csv("C:/Users/erguzman/Desktop/R advance/Datos_Churn_train.csv")
library(readr)
read_csv("C:/Users/erguzman/Desktop/R advance/Datos_Churn_train.csv")
read_csv("Datos_Churn_train.csv")
library(readr)
read_csv("Datos_Churn_train.csv")
source("R/preparation/Lectura.R")
library(testthat)
install.packages("testthat")
datos <- read_csv("Datos_Churn_train.csv")
library(testthat)
expect_condition(is.numeric(datos$BalanceCuenta))
expect_true(is.numeric(datos$BalanceCuenta))
str(datos)
library(testthat)
datos <- read_csv("Datos_Churn_train.csv")
expect_true(is.numeric(datos$BalanceCuenta))
library(testthat)
test_file("test/test_data.R",)
test_file("test/test_data.R",)
test_file("test/test_data.R")
str(datos)
expect_true(is.double(datos$BalanceCuenta))
test_file("test/test_data.R")
library(testthat)
datos <- read_csv("Datos_Churn_train.csv")
expect_true(is.double(datos$BalanceCuenta))
library(testthat)
test_file("test/test_data.R")
read_csv("Datos_Churn_train.csv")
context("validar variable balance")
datos <- read_csv("Datos_Churn_train.csv")
expect_true(is.double(datos$BalanceCuenta))
test_file("test/test_data.R")
library(testthat)
test_file("test/test_data.R")
library(testthat)
context("validar variable balance")
datos <- read_csv("Datos_Churn_train.csv")
expect_true(is.double(datos$BalanceCuenta))
library(testthat)
test_file("test/test_data.R")
install.packages("fs")
test_file("test/test_raw.R")
library(fs)
test_that(desc = "No hay datos en la carpeta ./data/raw",
code = {
# lista los archivos .csv
files <- dir_ls(path = here("data/raw"), glob = "*.csv")
expect_true(length(files) >= 1)
})
install.packages("here")
library(here)
test_that(desc = "No hay datos en la carpeta ./data/raw",
code = {
# lista los archivos .csv
files <- dir_ls(path = here("data/raw"), glob = "*.csv")
expect_true(length(files) >= 1)
})
test_that(desc = "No hay datos en la carpeta ./data/raw",
code = {
# lista los archivos .csv
files <- dir_ls(path = here("./data/raw"), glob = "*.csv")
expect_true(length(files) >= 1)
})
packrat::init(options = list(auto.snapshot = TRUE))
library(kknn)
install.packages("kknn")
packrat::unbundle("P1-2019-07-11.tar.gz", "../tarea3/")
packrat::ubundle("P1-2019-07-11.tar.gz", "../tarea3/")
packrat::bundle("P1-2019-07-11.tar.gz", "../tarea3/")
packrat::bundle()
packrat::unbundle("P1-2019-07-11.tar.gz", "../tarea3/")
packrat::bundle()
packrat::unbundle("P1-2019-07-11.tar.gz")
packrat::bundle()
packrat::unbundle("P1-2019-07-11.tar.gz")
library(kknn)
source("R/preparation/Lectura.R")
library(readr)
read_csv("Datos_Churn_train.csv")
library(testthat)
test_file("test/test_data.R")
test_file("test/test_raw.R")
install.packages(c("fs", "here"))
library(fs)
library(here)
test_that(desc = "No hay datos en la carpeta ./data/raw",
code = {
# lista los archivos .csv
files <- dir_ls(path = here("./data/raw"), glob = "*.csv")
expect_true(length(files) >= 1)
})
library(fs)
library(here)
test_that(desc = "No hay datos en la carpeta ./data/raw",
code = {
# lista los archivos .csv
files <- dir_ls(path = here("./data/raw"), glob = "*.csv")
expect_true(length(files) >= 1)
})
library(fs)
library(here)
test_that(desc = "No hay datos en la carpeta ./data/raw",
code = {
# lista los archivos .csv
files <- dir_ls(path = here("./data/raw"), glob = "*.csv")
expect_true(length(files) >= 1)
})
str(datos)
datos <- read_csv("Datos_Churn_train.csv")
expect_true(is.double(datos$SalarioEstimado))
library(testthat)
context("validar variable balance")
datos <- read_csv("Datos_Churn_train.csv")
expect_true(is.double(datos$BalanceCuenta))
expect_true(is.double(datos$SalarioEstimado))
datos_test <- na.omit("test/test_data.R")
summary(datos_test)
